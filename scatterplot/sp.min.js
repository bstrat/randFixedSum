var addLabel,addLines,animate,animating,camera,createText2D,createTextCanvas,down,h,i,j,k,last,newVertex,onmessage,p,paused,pointCount,pointGeo,points,q,r,renderer,rfs,rs,s,scatterPlot,scene,sx,sy,transForm,vs,vx,w,x,y,z,_i,_j,_k,_l,_len,_len1,_len2,_len3,_len4,_m,_n,_o,_p,_q,_r,_ref,_ref1,_ref2,_ref3,_ref4,__slice=[].slice;for(createTextCanvas=function(e,n,t,r){var i,o;return null==n&&(n="black"),null==t&&(t="Tahoma"),null==r&&(r=20),o=document.createElement("canvas"),i=o.getContext("2d"),i.font=""+r+"px "+t,o.width=i.measureText(e).width,o.height=Math.ceil(r),i.font=""+r+"px "+t,i.fillStyle=n,i.fillText(e,0,Math.ceil(.8*r)),o},createText2D=function(e,n,t,r,i,o){var a,s,l;return a=createTextCanvas(e,n,t,r),l=new THREE.Texture(a),l.needsUpdate=!0,s=new THREE.Mesh(new THREE.PlaneGeometry(a.width,a.height,i,o),new THREE.MeshBasicMaterial({map:l,color:16777215,transparent:!0})),s.scale.set(.25,.25,.25),s.doubleSided=!0,s},renderer=new THREE.WebGLRenderer({antialias:!0}),w=window.innerWidth,h=window.innerHeight,renderer.setSize(w,h),document.body.appendChild(renderer.domElement),renderer.setClearColorHex(16777215,1),camera=new THREE.PerspectiveCamera(45,w/h,1,1e4),camera.position.z=220,camera.position.x=0,camera.position.y=15,scene=new THREE.Scene,scene.fog=new THREE.FogExp2(16777215,.0035),scatterPlot=new THREE.Object3D,scene.add(scatterPlot),scatterPlot.rotation.y=.5,transForm=function(e,n,t){return[100*(e-.5),100*(n-.5),100*(.5-t)]},newVertex=function(e,n,t){return new THREE.Vertex(function(e,n,t){t.prototype=e.prototype;var r=new t,i=e.apply(r,n);return Object(i)===i?i:r}(THREE.Vector3,transForm(e,n,t),function(){}))},addLines=function(e,n,t,r){var i,o,a,s,l;for(null==n&&(n=0),null==t&&(t=1),null==r&&(r=scatterPlot),o=new THREE.Geometry,s=0,l=e.length;l>s;s++)a=e[s],o.vertices.push(newVertex.apply(null,a));return i=new THREE.Line(o,new THREE.LineBasicMaterial({color:n,lineWidth:t})),i.type=THREE.Lines,r.add(i)},addLabel=function(e,n,t,r,i,o){var a,s;return null==i&&(i=0),null==o&&(o=scatterPlot),a=createText2D(e),s=transForm(n,t,r),a.position.x=s[0],a.position.y=s[1],a.position.z=s[2],a.rotation.y=-Math.PI*i,o.add(a)},vs=[],_ref=[[0,0,0],[0,1,1],[1,0,1],[1,1,0]],_i=0,_len=_ref.length;_len>_i;_i++)for(p=_ref[_i],i=_j=0;2>=_j;i=++_j)for(q=p.slice(0),q[i]=(p[i]+1)%2,_ref1=[p,q],_k=0,_len1=_ref1.length;_len1>_k;_k++)vx=_ref1[_k],vs.push(vx);for(i=_l=0;2>=_l;i=++_l)for(_ref2=[[i/2,0,-.05],[1.02,i/2,0],[-.05,0,i/2]],j=_m=0,_len2=_ref2.length;_len2>_m;j=++_m){for(p=_ref2[j],q=p.slice(0),k=0===j?2:0,q[k]+=.03,_ref3=[p,q],_n=0,_len3=_ref3.length;_len3>_n;_n++)vx=_ref3[_n],vs.push(vx);r=p.slice(0),r[k]=r[k]>1?1.1:-.1,addLabel.apply(null,[(i/2).toString()].concat(__slice.call(r),[0===j?.5:0]))}for(addLines(vs,8421504),s=1.25,vs=[],i=_o=0;2>=_o;i=++_o)for(k=_p=0;1>=_p;k=++_p)for(j=_q=0;2>=_q;j=++_q)j!==i&&(p=[s-1,s-1,s-1],p[i]=k,p[j]=1-k,vs.push(p));for(addLines(vs),pointCount=16384,pointGeo=new THREE.Geometry,rfs=randFixedSum(3,pointCount,s,0,1),i=_r=0,_len4=rfs.length;_len4>_r;i=++_r)rs=rfs[i],_ref4=transForm.apply(null,rs),x=_ref4[0],y=_ref4[1],z=_ref4[2],pointGeo.vertices.push(new THREE.Vertex(new THREE.Vector3(x,y,z))),pointGeo.vertices[i].angle=Math.atan2(z,x),pointGeo.vertices[i].radius=Math.sqrt(x*x+z*z),pointGeo.vertices[i].speed=z/100*(x/100),pointGeo.colors.push((new THREE.Color).setHSV((x+50)/100,(z+50)/100,(y+50)/100));points=new THREE.ParticleSystem(pointGeo,new THREE.ParticleBasicMaterial({vertexColors:!0,size:1})),scatterPlot.add(points),renderer.render(scene,camera),paused=!1,last=(new Date).getTime(),down=!1,sx=0,sy=0,window.onmousedown=function(e){return down=!0,sx=e.clientX,sy=e.clientY},window.onmouseup=function(){return down=!1},window.onmousemove=function(e){var n,t;return down?(n=e.clientX-sx,t=e.clientY-sy,scatterPlot.rotation.y+=.01*n,camera.position.y+=t,sx+=n,sy+=t):void 0},animating=!1,window.ondblclick=function(){return animating=!animating},animate=function(e){var n,t,r,i;if(!paused){if(last=e,animating){for(r=pointGeo.vertices,i=0,t=r.length;t>i;i++)n=r[i],n.angle+=.01*n.speed,n.position.x=Math.cos(n.angle)*n.radius,n.position.z=Math.sin(n.angle)*n.radius;pointGeo.__dirtyVertices=!0}renderer.clear(),camera.lookAt(scene.position),renderer.render(scene,camera)}return window.requestAnimationFrame(animate,renderer.domElement)},animate((new Date).getTime()),onmessage=function(e){return paused="pause"===e.data};